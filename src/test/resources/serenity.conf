serenity {
  take.screenshots = FOR_FAILURES
}


#
# Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform
#

webdriver {
  drivers = chrome
  local = true
  use.driver.service.pool = false
}

headless.mode = false

#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches="""--window-size=1920,1080;--start-maximized;--disable-features=VizDisplayCompositor;--test-type;--no-sandbox;--ignore-certificate-errors;--disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;--incognito;--disable-infobars,--disable-gpu"""
firefox.switches="""--window-size=1920,1080;--start-maximized;--disable-features=VizDisplayCompositor;--test-type;--no-sandbox;--ignore-certificate-errors;--disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;--incognito;--disable-infobars,--disable-gpu"""

  #
  # This section defines environment-specific configuration for different environments.
  # You can define normal Serenity properties, such as webdriver.base.url, or custom ones
  # You can find more details about this feature at https://johnfergusonsmart.com/environment-specific-configuration-in-serenity-bdd/
  #
  environments {
    default {
      env = "localhost:8080"     // You can simply store the base url in a variables
      domain = "myapp.myorg.com"
      webdriver.base.url = "http://#{env}/#{domain}"
    }
    all {
      login.page = "#{webdriver.base.url}/login"
      serenity.restart.browser.for.each=NEVER
    }
    dev {
      env = "dev"
      webdriver.base.url = "http://#{env}/#{domain}"
    }
    staging {
      env = "qa"
      webdriver.base.url = "http://#{env}/#{domain}"
    }
    prod {
      env = "prod"
      webdriver.base.url = "http://#{env}/#{domain}"
    }

  }