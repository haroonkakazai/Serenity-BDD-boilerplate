serenity {
  take.screenshots = FOR_FAILURES
}


#
# Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform
#
headless.mode = false
drivers {
  windows {
    webdriver.chrome.driver = src/test/resources/webdriver/windows/chromedriver.exe
    webdriver.gecko.driver = src/test/resources/webdriver/windows/geckodriver.exe
  }
  mac {
    webdriver.chrome.driver = src/test/resources/webdriver/mac/chromedriver
    webdriver.gecko.driver = src/test/resources/webdriver/mac/geckodriver
  }
  linux {
    webdriver.chrome.driver = src/test/resources/webdriver/linux/chromedriver
    webdriver.gecko.driver = src/test/resources/webdriver/linux/geckodriver
  }
}

  #
  # This section defines environment-specific configuration for different environments.
  # You can define normal Serenity properties, such as webdriver.base.url, or custom ones
  # You can find more details about this feature at https://johnfergusonsmart.com/environment-specific-configuration-in-serenity-bdd/
  #
  environments {
    default {
      env = "localhost:8080"     // You can simply store the base url in a variables
      domain = "myapp.myorg.com"
      webdriver.base.url = "http://#{env}/#{domain}"
    }
    all {
      login.page = "#{webdriver.base.url}/login"
      serenity.restart.browser.for.each=NEVER
    }
    dev {
      env = "dev"
      webdriver.base.url = "http://#{env}/#{domain}"
    }
    staging {
      env = "qa"
      webdriver.base.url = "http://#{env}/#{domain}"
    }
    prod {
      env = "prod"
      webdriver.base.url = "http://#{env}/#{domain}"
    }

  }